{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\sleek-circle-8356\\\\src\\\\Components\\\\Homepage.jsx\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n// import {\n//     Box,\n//     Flex,\n//     Text,\n//     IconButton,\n//     Button,\n//     Stack,\n//     Collapse,\n//     Icon,\n//     Popover,\n//     PopoverTrigger,\n//     PopoverContent,\n//     useColorModeValue,\n//     useBreakpointValue,\n//     useDisclosure,\n//   } from '@chakra-ui/react'\n//   import {\n//     HamburgerIcon,\n//     CloseIcon,\n//     ChevronDownIcon,\n//     ChevronRightIcon,\n//   } from '@chakra-ui/icons'\n\nexport const Homepage = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hi\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n//   export default function Homepage() {\n//     const { isOpen, onToggle } = useDisclosure()\n\n//     return (\n//       <Box>\n//         <Flex\n//           bg={useColorModeValue('white', 'gray.800')}\n//           color={useColorModeValue('gray.600', 'white')}\n//           minH={'60px'}\n//           py={{ base: 2 }}\n//           px={{ base: 4 }}\n//           borderBottom={1}\n//           borderStyle={'solid'}\n//           borderColor={useColorModeValue('gray.200', 'gray.900')}\n//           align={'center'}>\n//           <Flex\n//             flex={{ base: 1, md: 'auto' }}\n//             ml={{ base: -2 }}\n//             display={{ base: 'flex', md: 'none' }}>\n//             <IconButton\n//               onClick={onToggle}\n//               icon={isOpen ? <CloseIcon w={3} h={3} /> : <HamburgerIcon w={5} h={5} />}\n//               variant={'ghost'}\n//               aria-label={'Toggle Navigation'}\n//             />\n//           </Flex>\n//           <Flex flex={{ base: 1 }} justify={{ base: 'center', md: 'start' }}>\n//             <Text\n//               textAlign={useBreakpointValue({ base: 'center', md: 'left' })}\n//               fontFamily={'heading'}\n//               color={useColorModeValue('gray.800', 'white')}>\n//               Logo\n//             </Text>\n\n//             <Flex display={{ base: 'none', md: 'flex' }} ml={10}>\n//               <DesktopNav />\n//             </Flex>\n//           </Flex>\n\n//           <Stack\n//             flex={{ base: 1, md: 0 }}\n//             justify={'flex-end'}\n//             direction={'row'}\n//             spacing={6}>\n//             <Button as={'a'} fontSize={'sm'} fontWeight={400} variant={'link'} href={'#'}>\n//               Sign In\n//             </Button>\n//             <Button\n//               as={'a'}\n//               display={{ base: 'none', md: 'inline-flex' }}\n//               fontSize={'sm'}\n//               fontWeight={600}\n//               color={'white'}\n//               bg={'pink.400'}\n//               href={'#'}\n//               _hover={{\n//                 bg: 'pink.300',\n//               }}>\n//               Sign Up\n//             </Button>\n//           </Stack>\n//         </Flex>\n\n//         <Collapse in={isOpen} animateOpacity>\n//           <MobileNav />\n//         </Collapse>\n//       </Box>\n//     )\n//   }\n\n// const DesktopNav = () => {\n//   const linkColor = useColorModeValue('gray.600', 'gray.200')\n//   const linkHoverColor = useColorModeValue('gray.800', 'white')\n//   const popoverContentBgColor = useColorModeValue('white', 'gray.800')\n\n//   return (\n//     <Stack direction={'row'} spacing={4}>\n//       {NAV_ITEMS.map((navItem) => (\n//         <Box key={navItem.label}>\n//           <Popover trigger={'hover'} placement={'bottom-start'}>\n//             <PopoverTrigger>\n//               <Box\n//                 as=\"a\"\n//                 p={2}\n//                 href={navItem.href ?? '#'}\n//                 fontSize={'sm'}\n//                 fontWeight={500}\n//                 color={linkColor}\n//                 _hover={{\n//                   textDecoration: 'none',\n//                   color: linkHoverColor,\n//                 }}>\n//                 {navItem.label}\n//               </Box>\n//             </PopoverTrigger>\n\n//             {navItem.children && (\n//               <PopoverContent\n//                 border={0}\n//                 boxShadow={'xl'}\n//                 bg={popoverContentBgColor}\n//                 p={4}\n//                 rounded={'xl'}\n//                 minW={'sm'}>\n//                 <Stack>\n//                   {navItem.children.map((child) => (\n//                     <DesktopSubNav key={child.label} {...child} />\n//                   ))}\n//                 </Stack>\n//               </PopoverContent>\n//             )}\n//           </Popover>\n//         </Box>\n//       ))}\n//     </Stack>\n//   )\n// }\n\n// const DesktopSubNav = ({ label, href, subLabel }: NavItem) => {\n//   return (\n//     <Box\n//       as=\"a\"\n//       href={href}\n//       role={'group'}\n//       display={'block'}\n//       p={2}\n//       rounded={'md'}\n//       _hover={{ bg: useColorModeValue('pink.50', 'gray.900') }}>\n//       <Stack direction={'row'} align={'center'}>\n//         <Box>\n//           <Text\n//             transition={'all .3s ease'}\n//             _groupHover={{ color: 'pink.400' }}\n//             fontWeight={500}>\n//             {label}\n//           </Text>\n//           <Text fontSize={'sm'}>{subLabel}</Text>\n//         </Box>\n//         <Flex\n//           transition={'all .3s ease'}\n//           transform={'translateX(-10px)'}\n//           opacity={0}\n//           _groupHover={{ opacity: '100%', transform: 'translateX(0)' }}\n//           justify={'flex-end'}\n//           align={'center'}\n//           flex={1}>\n//           <Icon color={'pink.400'} w={5} h={5} as={ChevronRightIcon} />\n//         </Flex>\n//       </Stack>\n//     </Box>\n//   )\n// }\n_c = Homepage;\nconst MobileNav = () => {\n  _s();\n  return /*#__PURE__*/_jsxDEV(Stack, {\n    bg: useColorModeValue('white', 'gray.800'),\n    p: 4,\n    display: {\n      md: 'none'\n    },\n    children: NAV_ITEMS.map(navItem => /*#__PURE__*/_jsxDEV(MobileNavItem, {\n      ...navItem\n    }, navItem.label, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 188,\n    columnNumber: 7\n  }, this);\n};\n\n// const MobileNavItem = ({ label, children, href }: NavItem) => {\n//   const { isOpen, onToggle } = useDisclosure()\n\n//   return (\n//     <Stack spacing={4} onClick={children && onToggle}>\n//       <Box\n//         py={2}\n//         as=\"a\"\n//         href={href ?? '#'}\n//         justifyContent=\"space-between\"\n//         alignItems=\"center\"\n//         _hover={{\n//           textDecoration: 'none',\n//         }}>\n//         <Text fontWeight={600} color={useColorModeValue('gray.600', 'gray.200')}>\n//           {label}\n//         </Text>\n//         {children && (\n//           <Icon\n//             as={ChevronDownIcon}\n//             transition={'all .25s ease-in-out'}\n//             transform={isOpen ? 'rotate(180deg)' : ''}\n//             w={6}\n//             h={6}\n//           />\n//         )}\n//       </Box>\n\n//       <Collapse in={isOpen} animateOpacity style={{ marginTop: '0!important' }}>\n//         <Stack\n//           mt={2}\n//           pl={4}\n//           borderLeft={1}\n//           borderStyle={'solid'}\n//           borderColor={useColorModeValue('gray.200', 'gray.700')}\n//           align={'start'}>\n//           {children &&\n//             children.map((child) => (\n//               <Box as=\"a\" key={child.label} py={2} href={child.href}>\n//                 {child.label}\n//               </Box>\n//             ))}\n//         </Stack>\n//       </Collapse>\n//     </Stack>\n//   )\n// }\n\n// interface NavItem {\n//   label: string\n//   subLabel?: string\n//   children?: Array<NavItem>\n//   href?: string\n// }\n\n// const NAV_ITEMS: Array<NavItem> = [\n//   {\n//     label: 'Inspiration',\n//     children: [\n//       {\n//         label: 'Explore Design Work',\n//         subLabel: 'Trending Design to inspire you',\n//         href: '#',\n//       },\n//       {\n//         label: 'New & Noteworthy',\n//         subLabel: 'Up-and-coming Designers',\n//         href: '#',\n//       },\n//     ],\n//   },\n//   {\n//     label: 'Find Work',\n//     children: [\n//       {\n//         label: 'Job Board',\n//         subLabel: 'Find your dream design job',\n//         href: '#',\n//       },\n//       {\n//         label: 'Freelance Projects',\n//         subLabel: 'An exclusive list for contract work',\n//         href: '#',\n//       },\n//     ],\n//   },\n//   {\n//     label: 'Learn Design',\n//     href: '#',\n//   },\n//   {\n//     label: 'Hire Designers',\n//     href: '#',\n//   },\n// ]\n_s(MobileNav, \"3skuTHwppfEdh6aKNlffDjyTB8U=\", true);\n_c2 = MobileNav;\nvar _c, _c2;\n$RefreshReg$(_c, \"Homepage\");\n$RefreshReg$(_c2, \"MobileNav\");","map":{"version":3,"names":["Homepage","_jsxDEV","_Fragment","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","MobileNav","_s","Stack","bg","useColorModeValue","p","display","md","NAV_ITEMS","map","navItem","MobileNavItem","label","_c2","$RefreshReg$"],"sources":["C:/Users/admin/Desktop/sleek-circle-8356/src/Components/Homepage.jsx"],"sourcesContent":["\r\n// import {\r\n//     Box,\r\n//     Flex,\r\n//     Text,\r\n//     IconButton,\r\n//     Button,\r\n//     Stack,\r\n//     Collapse,\r\n//     Icon,\r\n//     Popover,\r\n//     PopoverTrigger,\r\n//     PopoverContent,\r\n//     useColorModeValue,\r\n//     useBreakpointValue,\r\n//     useDisclosure,\r\n//   } from '@chakra-ui/react'\r\n//   import {\r\n//     HamburgerIcon,\r\n//     CloseIcon,\r\n//     ChevronDownIcon,\r\n//     ChevronRightIcon,\r\n//   } from '@chakra-ui/icons'\r\n  \r\nexport const Homepage=()=>{\r\n  return (\r\n    \r\n    <>\r\n    <h1>Hi</h1>\r\n    </>\r\n  )\r\n}\r\n//   export default function Homepage() {\r\n//     const { isOpen, onToggle } = useDisclosure()\r\n  \r\n//     return (\r\n//       <Box>\r\n//         <Flex\r\n//           bg={useColorModeValue('white', 'gray.800')}\r\n//           color={useColorModeValue('gray.600', 'white')}\r\n//           minH={'60px'}\r\n//           py={{ base: 2 }}\r\n//           px={{ base: 4 }}\r\n//           borderBottom={1}\r\n//           borderStyle={'solid'}\r\n//           borderColor={useColorModeValue('gray.200', 'gray.900')}\r\n//           align={'center'}>\r\n//           <Flex\r\n//             flex={{ base: 1, md: 'auto' }}\r\n//             ml={{ base: -2 }}\r\n//             display={{ base: 'flex', md: 'none' }}>\r\n//             <IconButton\r\n//               onClick={onToggle}\r\n//               icon={isOpen ? <CloseIcon w={3} h={3} /> : <HamburgerIcon w={5} h={5} />}\r\n//               variant={'ghost'}\r\n//               aria-label={'Toggle Navigation'}\r\n//             />\r\n//           </Flex>\r\n//           <Flex flex={{ base: 1 }} justify={{ base: 'center', md: 'start' }}>\r\n//             <Text\r\n//               textAlign={useBreakpointValue({ base: 'center', md: 'left' })}\r\n//               fontFamily={'heading'}\r\n//               color={useColorModeValue('gray.800', 'white')}>\r\n//               Logo\r\n//             </Text>\r\n  \r\n//             <Flex display={{ base: 'none', md: 'flex' }} ml={10}>\r\n//               <DesktopNav />\r\n//             </Flex>\r\n//           </Flex>\r\n  \r\n//           <Stack\r\n//             flex={{ base: 1, md: 0 }}\r\n//             justify={'flex-end'}\r\n//             direction={'row'}\r\n//             spacing={6}>\r\n//             <Button as={'a'} fontSize={'sm'} fontWeight={400} variant={'link'} href={'#'}>\r\n//               Sign In\r\n//             </Button>\r\n//             <Button\r\n//               as={'a'}\r\n//               display={{ base: 'none', md: 'inline-flex' }}\r\n//               fontSize={'sm'}\r\n//               fontWeight={600}\r\n//               color={'white'}\r\n//               bg={'pink.400'}\r\n//               href={'#'}\r\n//               _hover={{\r\n//                 bg: 'pink.300',\r\n//               }}>\r\n//               Sign Up\r\n//             </Button>\r\n//           </Stack>\r\n//         </Flex>\r\n  \r\n//         <Collapse in={isOpen} animateOpacity>\r\n//           <MobileNav />\r\n//         </Collapse>\r\n//       </Box>\r\n//     )\r\n//   }\r\n  \r\n  // const DesktopNav = () => {\r\n  //   const linkColor = useColorModeValue('gray.600', 'gray.200')\r\n  //   const linkHoverColor = useColorModeValue('gray.800', 'white')\r\n  //   const popoverContentBgColor = useColorModeValue('white', 'gray.800')\r\n  \r\n  //   return (\r\n  //     <Stack direction={'row'} spacing={4}>\r\n  //       {NAV_ITEMS.map((navItem) => (\r\n  //         <Box key={navItem.label}>\r\n  //           <Popover trigger={'hover'} placement={'bottom-start'}>\r\n  //             <PopoverTrigger>\r\n  //               <Box\r\n  //                 as=\"a\"\r\n  //                 p={2}\r\n  //                 href={navItem.href ?? '#'}\r\n  //                 fontSize={'sm'}\r\n  //                 fontWeight={500}\r\n  //                 color={linkColor}\r\n  //                 _hover={{\r\n  //                   textDecoration: 'none',\r\n  //                   color: linkHoverColor,\r\n  //                 }}>\r\n  //                 {navItem.label}\r\n  //               </Box>\r\n  //             </PopoverTrigger>\r\n  \r\n  //             {navItem.children && (\r\n  //               <PopoverContent\r\n  //                 border={0}\r\n  //                 boxShadow={'xl'}\r\n  //                 bg={popoverContentBgColor}\r\n  //                 p={4}\r\n  //                 rounded={'xl'}\r\n  //                 minW={'sm'}>\r\n  //                 <Stack>\r\n  //                   {navItem.children.map((child) => (\r\n  //                     <DesktopSubNav key={child.label} {...child} />\r\n  //                   ))}\r\n  //                 </Stack>\r\n  //               </PopoverContent>\r\n  //             )}\r\n  //           </Popover>\r\n  //         </Box>\r\n  //       ))}\r\n  //     </Stack>\r\n  //   )\r\n  // }\r\n  \r\n  // const DesktopSubNav = ({ label, href, subLabel }: NavItem) => {\r\n  //   return (\r\n  //     <Box\r\n  //       as=\"a\"\r\n  //       href={href}\r\n  //       role={'group'}\r\n  //       display={'block'}\r\n  //       p={2}\r\n  //       rounded={'md'}\r\n  //       _hover={{ bg: useColorModeValue('pink.50', 'gray.900') }}>\r\n  //       <Stack direction={'row'} align={'center'}>\r\n  //         <Box>\r\n  //           <Text\r\n  //             transition={'all .3s ease'}\r\n  //             _groupHover={{ color: 'pink.400' }}\r\n  //             fontWeight={500}>\r\n  //             {label}\r\n  //           </Text>\r\n  //           <Text fontSize={'sm'}>{subLabel}</Text>\r\n  //         </Box>\r\n  //         <Flex\r\n  //           transition={'all .3s ease'}\r\n  //           transform={'translateX(-10px)'}\r\n  //           opacity={0}\r\n  //           _groupHover={{ opacity: '100%', transform: 'translateX(0)' }}\r\n  //           justify={'flex-end'}\r\n  //           align={'center'}\r\n  //           flex={1}>\r\n  //           <Icon color={'pink.400'} w={5} h={5} as={ChevronRightIcon} />\r\n  //         </Flex>\r\n  //       </Stack>\r\n  //     </Box>\r\n  //   )\r\n  // }\r\n  \r\n  const MobileNav = () => {\r\n    return (\r\n      <Stack bg={useColorModeValue('white', 'gray.800')} p={4} display={{ md: 'none' }}>\r\n        {NAV_ITEMS.map((navItem) => (\r\n          <MobileNavItem key={navItem.label} {...navItem} />\r\n        ))}\r\n      </Stack>\r\n    )\r\n  }\r\n  \r\n  // const MobileNavItem = ({ label, children, href }: NavItem) => {\r\n  //   const { isOpen, onToggle } = useDisclosure()\r\n  \r\n  //   return (\r\n  //     <Stack spacing={4} onClick={children && onToggle}>\r\n  //       <Box\r\n  //         py={2}\r\n  //         as=\"a\"\r\n  //         href={href ?? '#'}\r\n  //         justifyContent=\"space-between\"\r\n  //         alignItems=\"center\"\r\n  //         _hover={{\r\n  //           textDecoration: 'none',\r\n  //         }}>\r\n  //         <Text fontWeight={600} color={useColorModeValue('gray.600', 'gray.200')}>\r\n  //           {label}\r\n  //         </Text>\r\n  //         {children && (\r\n  //           <Icon\r\n  //             as={ChevronDownIcon}\r\n  //             transition={'all .25s ease-in-out'}\r\n  //             transform={isOpen ? 'rotate(180deg)' : ''}\r\n  //             w={6}\r\n  //             h={6}\r\n  //           />\r\n  //         )}\r\n  //       </Box>\r\n  \r\n  //       <Collapse in={isOpen} animateOpacity style={{ marginTop: '0!important' }}>\r\n  //         <Stack\r\n  //           mt={2}\r\n  //           pl={4}\r\n  //           borderLeft={1}\r\n  //           borderStyle={'solid'}\r\n  //           borderColor={useColorModeValue('gray.200', 'gray.700')}\r\n  //           align={'start'}>\r\n  //           {children &&\r\n  //             children.map((child) => (\r\n  //               <Box as=\"a\" key={child.label} py={2} href={child.href}>\r\n  //                 {child.label}\r\n  //               </Box>\r\n  //             ))}\r\n  //         </Stack>\r\n  //       </Collapse>\r\n  //     </Stack>\r\n  //   )\r\n  // }\r\n  \r\n  // interface NavItem {\r\n  //   label: string\r\n  //   subLabel?: string\r\n  //   children?: Array<NavItem>\r\n  //   href?: string\r\n  // }\r\n  \r\n  // const NAV_ITEMS: Array<NavItem> = [\r\n  //   {\r\n  //     label: 'Inspiration',\r\n  //     children: [\r\n  //       {\r\n  //         label: 'Explore Design Work',\r\n  //         subLabel: 'Trending Design to inspire you',\r\n  //         href: '#',\r\n  //       },\r\n  //       {\r\n  //         label: 'New & Noteworthy',\r\n  //         subLabel: 'Up-and-coming Designers',\r\n  //         href: '#',\r\n  //       },\r\n  //     ],\r\n  //   },\r\n  //   {\r\n  //     label: 'Find Work',\r\n  //     children: [\r\n  //       {\r\n  //         label: 'Job Board',\r\n  //         subLabel: 'Find your dream design job',\r\n  //         href: '#',\r\n  //       },\r\n  //       {\r\n  //         label: 'Freelance Projects',\r\n  //         subLabel: 'An exclusive list for contract work',\r\n  //         href: '#',\r\n  //       },\r\n  //     ],\r\n  //   },\r\n  //   {\r\n  //     label: 'Learn Design',\r\n  //     href: '#',\r\n  //   },\r\n  //   {\r\n  //     label: 'Hire Designers',\r\n  //     href: '#',\r\n  //   },\r\n  // ]"],"mappings":";;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMA,QAAQ,GAACA,CAAA,KAAI;EACxB,oBAEEC,OAAA,CAAAC,SAAA;IAAAC,QAAA,eACAF,OAAA;MAAAE,QAAA,EAAI;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC,gBACT,CAAC;AAEP,CAAC;AACD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEE;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAAC,EAAA,GA/JWR,QAAQ;AAiKnB,MAAMS,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,oBACET,OAAA,CAACU,KAAK;IAACC,EAAE,EAAEC,iBAAiB,CAAC,OAAO,EAAE,UAAU,CAAE;IAACC,CAAC,EAAE,CAAE;IAACC,OAAO,EAAE;MAAEC,EAAE,EAAE;IAAO,CAAE;IAAAb,QAAA,EAC9Ec,SAAS,CAACC,GAAG,CAAEC,OAAO,iBACrBlB,OAAA,CAACmB,aAAa;MAAA,GAAyBD;IAAO,GAA1BA,OAAO,CAACE,KAAK;MAAAjB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAgB,CAClD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEZ,CAAC;;AAED;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAAG,EAAA,CAxGMD,SAAS;AAAAa,GAAA,GAATb,SAAS;AAAA,IAAAD,EAAA,EAAAc,GAAA;AAAAC,YAAA,CAAAf,EAAA;AAAAe,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}